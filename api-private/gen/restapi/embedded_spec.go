// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON, FlatSwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "User Private API",
    "contact": {
      "name": "mars"
    },
    "version": "v1"
  },
  "basePath": "/api-private/v1/users",
  "paths": {
    "/token/logout": {
      "post": {
        "operationId": "Logout",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "refreshToken",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/token/oauthJump": {
      "post": {
        "operationId": "OauthJump",
        "parameters": [
          {
            "type": "string",
            "name": "redirectUri",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "authorizationCode",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "state",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/oauthJumpResponse"
            }
          }
        }
      }
    },
    "/token/oauthState": {
      "post": {
        "operationId": "OauthState",
        "parameters": [
          {
            "type": "string",
            "name": "queryString",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "state",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "operationId": "RefreshToken",
        "parameters": [
          {
            "type": "string",
            "name": "refreshToken",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/token"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "oauthJumpResponse": {
      "type": "object",
      "properties": {
        "queryString": {
          "type": "string"
        },
        "token": {
          "type": "object",
          "$ref": "#/definitions/token"
        }
      }
    },
    "token": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "User Private API",
    "contact": {
      "name": "mars"
    },
    "version": "v1"
  },
  "basePath": "/api-private/v1/users",
  "paths": {
    "/token/logout": {
      "post": {
        "operationId": "Logout",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "refreshToken",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/token/oauthJump": {
      "post": {
        "operationId": "OauthJump",
        "parameters": [
          {
            "type": "string",
            "name": "redirectUri",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "authorizationCode",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "state",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/oauthJumpResponse"
            }
          }
        }
      }
    },
    "/token/oauthState": {
      "post": {
        "operationId": "OauthState",
        "parameters": [
          {
            "type": "string",
            "name": "queryString",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "state",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "operationId": "RefreshToken",
        "parameters": [
          {
            "type": "string",
            "name": "refreshToken",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/token"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "oauthJumpResponse": {
      "type": "object",
      "properties": {
        "queryString": {
          "type": "string"
        },
        "token": {
          "type": "object",
          "$ref": "#/definitions/token"
        }
      }
    },
    "token": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}

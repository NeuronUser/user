// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronUser/user/api-private/gen/models"
)

// GetOauthStateOKCode is the HTTP code returned for type GetOauthStateOK
const GetOauthStateOKCode int = 200

/*GetOauthStateOK state

swagger:response getOauthStateOK
*/
type GetOauthStateOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetOauthStateOK creates GetOauthStateOK with default headers values
func NewGetOauthStateOK() *GetOauthStateOK {
	return &GetOauthStateOK{}
}

// WithPayload adds the payload to the get oauth state o k response
func (o *GetOauthStateOK) WithPayload(payload string) *GetOauthStateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth state o k response
func (o *GetOauthStateOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauthStateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetOauthStateDefault Error response

swagger:response getOauthStateDefault
*/
type GetOauthStateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.GetOauthStateDefaultBody `json:"body,omitempty"`
}

// NewGetOauthStateDefault creates GetOauthStateDefault with default headers values
func NewGetOauthStateDefault(code int) *GetOauthStateDefault {
	if code <= 0 {
		code = 500
	}

	return &GetOauthStateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get oauth state default response
func (o *GetOauthStateDefault) WithStatusCode(code int) *GetOauthStateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get oauth state default response
func (o *GetOauthStateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get oauth state default response
func (o *GetOauthStateDefault) WithPayload(payload *models.GetOauthStateDefaultBody) *GetOauthStateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth state default response
func (o *GetOauthStateDefault) SetPayload(payload *models.GetOauthStateDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauthStateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NeuronUser/user/api-private/gen/models"
)

// OauthJumpOKCode is the HTTP code returned for type OauthJumpOK
const OauthJumpOKCode int = 200

/*OauthJumpOK jwt

swagger:response oauthJumpOK
*/
type OauthJumpOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewOauthJumpOK creates OauthJumpOK with default headers values
func NewOauthJumpOK() *OauthJumpOK {
	return &OauthJumpOK{}
}

// WithPayload adds the payload to the oauth jump o k response
func (o *OauthJumpOK) WithPayload(payload string) *OauthJumpOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the oauth jump o k response
func (o *OauthJumpOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OauthJumpOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*OauthJumpDefault Error response

swagger:response oauthJumpDefault
*/
type OauthJumpDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.OauthJumpDefaultBody `json:"body,omitempty"`
}

// NewOauthJumpDefault creates OauthJumpDefault with default headers values
func NewOauthJumpDefault(code int) *OauthJumpDefault {
	if code <= 0 {
		code = 500
	}

	return &OauthJumpDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the oauth jump default response
func (o *OauthJumpDefault) WithStatusCode(code int) *OauthJumpDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the oauth jump default response
func (o *OauthJumpDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the oauth jump default response
func (o *OauthJumpDefault) WithPayload(payload *models.OauthJumpDefaultBody) *OauthJumpDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the oauth jump default response
func (o *OauthJumpDefault) SetPayload(payload *models.OauthJumpDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *OauthJumpDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
